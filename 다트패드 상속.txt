void main() {
  print('-------Idol---------');
  Idol apink = Idol(name: '에이핑크', membersCount: 5);

  apink.sayName();
  apink.sayMembersCount();
  print('-------BoyGroup--------');
  BoyGroup bts = BoyGroup('BTS', 7);

  bts.sayMembersCount();
  bts.sayName();
  bts.sayMale();
  
  print('--------------girlGroup-----------');
  GirlGroup redvelvet= GirlGroup('Red velvet',5);
  
  redvelvet.sayMembersCount();
  redvelvet.sayName();
  redvelvet.sayFemale();
  
  print('---------------type Comparison------------');
  print(apink is Idol);
  print(apink is BoyGroup);
  print(apink is GirlGroup);
  
  print('---------------type Comparison1------------');
  print(bts is Idol);
  print(bts is BoyGroup);
  print(bts is GirlGroup);
  
  print('---------------type Comparison2------------');
  print(redvelvet is Idol);
  print(redvelvet is BoyGroup);
  print(redvelvet is GirlGroup);
  
}

//상속 - inheritance
//상속을 받으면 부모 클래스의 모든 속성을
//자식 클래스가 부여받는다.
//상속은 부모에서 자식으로 속성을 부여하는 기능
//자식이 부모로 상속은 할 수 없다.

class Idol {
  String name;
  int membersCount;

  Idol({required this.name, required this.membersCount});
  void sayName() {
    print('저는 ${this.name}입니다.');
  }

  void sayMembersCount() {
    print('${this.name}은 ${this.membersCount}명의 맴버가 있습니다.');
  }
}

class BoyGroup extends Idol {
  BoyGroup(
    String name,
    int membersCount,
  ) : super(name: name, membersCount: membersCount);
  
  void sayMale(){
    print('저는 남자 아이돌입니다.');
  }
}

class GirlGroup extends Idol{
  GirlGroup(
  String name,
  int membersCount,
  ): super(name:name,membersCount:membersCount);
  
  void sayFemale(){
  print('저는 여자 아이돌입니다');
  }
    
}
